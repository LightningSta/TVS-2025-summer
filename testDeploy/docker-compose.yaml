services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true
  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    environment:
      API_HOST:  api-gateway:8082
      FRONTEND_HOST: frontend:5173
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    command: /bin/bash -c "envsubst '$$API_HOST $$FRONTEND_HOST' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    restart: always
  service-server:
    image: service-server:latest
    build:
      context: ./ServiceServer
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    ports:
      - "8081:8081"
    environment:
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-server:8081/eureka/
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
  postgres:
    image: postgres:17.2
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: NatsumiChan
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
  auth-service:
    image: auth-service:latest
    build:
      context: ./AuthService
      args:
        DOCKER_BUILDKIT: 1
    environment:
      GATEWAYURL: http://api-gateway:8082
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-server:8081/eureka/
    restart: always
    ports:
      - "8072:8072"
    depends_on:
      - data-base-service
  api-gateway:
    image: api-gateway:latest
    build:
      context: ./ApiGateway
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    environment:
      POSTGRES_USER: postgres
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-server:8081/eureka/
    ports:
      - "8082:8082"
    depends_on:
      - auth-service
  data-base-service:
    image: data-base-service:latest
    build:
      context: ./DataBaseService
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: NatsumiChan
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres:5432
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-server:8081/eureka/
    ports:
      - "8070:8070"
    depends_on:
      - postgres
      - service-server
  formula-serivce:
    image: formula-serivce:latest
    build:
      context: ./FormulaSerivce
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    environment:
      GATEWAYURL: http://api-gateway:8082
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-server:8081/eureka/
    depends_on:
      - data-base-service
    ports:
      - "8071:8071"
volumes:
  postgres_data:
